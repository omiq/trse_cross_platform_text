program move_char;
@projectsettings "system" BBCM
@use textmode

var
	
	
	instruction_str: string = ("USE CURSORS/QAOP",0);
	
	key_press: byte=0;
	charat:byte;
	x,y,oldx,oldy: byte;
	this_row: integer;
begin

	// Clear screen,
	Textmode::cls();
	Textmode::cursor_off();
	Textmode::move_to(4,0);
	Textmode::print_string(#instruction_str, False);
	


	// Test outputting consecutive rows
	// due to Apple II maddening screen memory scheme	
	fori y:= 0 to 23 do
	begin

		Textmode::put_char_at(3,y,y+$30);
		Textmode::put_char_at(20,y,64);
		
	end;
	
	// Initialise start position
	x:=10;
	y:=10;	
	Textmode::put_char_at(x,y,64);
	
	
	// Main loop
	while(1) do
	begin
		
		// Get keyboard input
		key_press:=Textmode::get_key();
		Textmode::move_to(0,0);
		Textmode::put_ch(key_press);
		Textmode::put_char_at(0,1,key_press);

		// Backup the current position			
		oldx:=x;
		oldy:=y;

			// Check the pressed key
			case key_press of
		       
				// Cursor keys defined in unit		        
    			    Textmode::CUR_U: if(y>0) then dec(y);
		        Textmode::CUR_D: if(y<23) then inc(y);
   			    Textmode::CUR_L: if(x>0) then dec(x);
		        Textmode::CUR_R: if(x<39) then inc(x);
		        
		        
			end;
			

			// Find out if the space we want to move to
			// is empty or if it contains anything special
			charat:=Textmode::get_char_at(x,y);
			Textmode::put_char_at(1,1,charat);
			togglebit(charat,7,0);

			
			// $20 is space
			if(charat=$20) then
			begin
				
				// Keep the new position and output
				// our @ symbol
				Textmode::put_char_at(x,y,64);
				Textmode::put_char_at(oldx,oldy,$A0);
	
			end
			else
			begin
				x:=oldx;
				y:=oldy;
			end;


		
		
		
	end;

		
	loop();
		
end.

